package br.org.generation.blogpessoal.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.org.generation.blogpessoal.model.Postagem;
import br.org.generation.blogpessoal.repository.PostagemRepository;

@RestController
@RequestMapping("/postagens")
@CrossOrigin(origins="*", allowedHeaders="*")
public class PostagemController {
	@Autowired
	private PostagemRepository postagemRepository;
	
	@GetMapping
	private ResponseEntity<List<Postagem>> getAll() {
		return ResponseEntity.ok(postagemRepository.findAll());
	}
	/* ***********MÉTODO LAMBDA************* */
	@GetMapping("/{id}") //variável de caminho (número)
	public ResponseEntity<Postagem> getById(@PathVariable Long id) { //retornar sequência de posts pelo id
		/*método de checagem de id*/
		return postagemRepository.findById(id)
				.map(resposta->ResponseEntity.ok(resposta))
				/*o que ele retornará, caso não encontrar*/
				.orElse(ResponseEntity.notFound().build());
	}
	/*especificação do que se busca*/
	@GetMapping("/titulo/{titulo}")
	private ResponseEntity<List<Postagem>> getByTitulo(@PathVariable String titulo) {
		return ResponseEntity.ok(postagemRepository.findAllByTituloContainingIgnoreCase(titulo));
    }
}